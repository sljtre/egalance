ion-col {
  border: solid 1px white;
  color: white;
}

.main {
  display: flex;
  width: 100%;
  --s: 80px; /* size  */
  --m: 1px; /* margin */
  --f: calc(1.732 * var(--s) + 4 * var(--m) - 1px);
  padding-bottom: 50px;
}

.container {
  font-size: 0; /*disable white space between inline block element */
}

.container ion-img {
  width: var(--s);
  margin: var(--m);
  height: calc(var(--s) * 1.1547);
  display: inline-block;
  font-size: initial;
  clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);
  margin-bottom: calc(var(--m) - var(--s) * 0.2885);
}

.container::before {
  content: "";
  width: calc(var(--s) / 2 + var(--m));
  float: left;
  height: 120%;
  shape-outside: repeating-linear-gradient(#0000 0 calc(var(--f) - 1px), #000 0 var(--f));
}


body {
  margin: 0;
  overflow: hidden;
}

#animated-bg {
  width: 100vw;
  height: 100vh;
  position: fixed;
  transition: 1s;

  $particleSize: 100px;
  $animationDuration: 30s;
  $amount: 30;

  & span {
    transition: 1s;
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: absolute;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }

  span {
    @for $i from 1 through $amount {
      &:nth-child(#{$i}) {
        top: random(100) * 1%;
        left: random(100) * 1%;
        animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
        animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
        transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
        $blurRadius: (random() + 0.5) * $particleSize * 0.5;
        $x: if(random() > 0.5, -1, 1);
        box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
      }
    }
  }

  $season-colors: (
    "winter": (#97b5d9, #e0dcdb, #000d41, #1c66b7),
    "spring": (#8ec53f, #c00040, #efe039, #4f46b5),
    "summer": (#e8c40a, #f1b637, #f82830, #1ec2b9),
    "autumn": (#e7c57e, #7e2725, #19745f, #6a4622),
  );
  @each $season, $colors in $season-colors {
    &.bg-#{$season} {
      background: nth($colors, 1);

      span {
        @for $i from 1 through $amount {
          &:nth-child(#{$i}) {
            color: nth($colors, random(length($colors) - 1) + 1);
          }
        }
      }
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}

#sun-div {
  filter: drop-shadow(-7px 5px 7px white);
  position: absolute;
  bottom: -200px;
  right: 0;
  width: calc(90vh + 200px);
  transform-origin: right;

  &.animated {
    animation: 6s 1 cubic-bezier(0.25, 0.35, 0.76, -0.25) move;
  }

  ion-img {
    width: 200px;
  }
}

$leaves: 48;
$animations: 12;
div#leaves {
  position: absolute;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  top: 0;
  left: 0;
  pointer-events: none;

  ion-img {
    position: absolute;
    display: block;
    top: -20%;
    opacity: 0;
  }

  @for $i from 1 through $leaves {
    &.animated ion-img:nth-child(#{ $i }) {
      opacity: 1;
      left: random(100) * 1%;
      animation-name: falling-leaf-#{$i % $animations};
      animation-timing-function: linear;
      animation-iteration-count: 1;
      animation-duration: (random(4000) + 2000) * 1ms;
      animation-delay: random(3000) * 1ms;
      width: (random(30) + 30) * 1px;
    }
  }
}

@for $i from 1 through $animations {
  @keyframes falling-leaf-#{$i} {
    0% {
      top: -20%;
      transform: translateX((random(5) + 17) * 1px) rotate(random(10) * 1deg);
    }
    #{random(10) + 5%} {
      transform: translateX((random(5) + 7) * 1px) rotate((random(10) + 5) * 1deg);
    }
    #{random(5) + 15%} {
      transform: translateX((random(10) + 17) * -1px) rotate((random(70) + 20) * 1deg);
    }
    #{random(20) + 30%} {
      transform: translateX((random(30) + 17) * -1px) rotate((random(40) + 40) * 1deg);
    }
    #{random(20) + 50%} {
      transform: translateX((random(5) + 17) * 1px) rotate(random(60) * 1deg);
    }
    #{random(20) + 70%} {
      transform: translateX((random(5) + 17) * -1px) rotate((random(60) + 130) * 1deg);
    }
    100% {
      top: 110%;
      transform: translateX(-20px) rotate(225deg);
    }
  }
}

#snow {
  position: absolute;
  width: 100vw;
  height: 100vh;
  pointer-events: none;

  div {
    opacity: 0;
    position: absolute;
    top: 0;
    border-radius: 100%;
    background-color: white;
    background-repeat: no-repeat;
    background-size: 100% auto;
  }

  $SNOWDROPS_LENGTH: 200;
  $snow-size-base: 30;
  $browser-buffer: 50;
  $left-position: 100 + $browser-buffer;
  $animate-speed-base: 11000;
  $minimum-falling-speed: 5000;
  $animate-delay-base: 5000;
  $blur-base: 5;

  @for $i from 1 through $SNOWDROPS_LENGTH {
    $size: abs(random($snow-size-base) - random($snow-size-base)) + 0px;

    &.animated div:nth-child(#{$i}) {
      left: abs(random($left-position) - random($left-position)) + 0%;
      width: $size;
      height: $size;
      animation-duration: abs(random($animate-speed-base) - random($animate-speed-base)) + $minimum-falling-speed + 0ms;
      animation-delay: abs(random($animate-delay-base)) + 0ms;
      animation-name: snow-drop;
      animation-iteration-count: 1;
      animation-timing-function: linear;
      filter: blur(abs(random($blur-base) - random($blur-base)) + 0px);
    }
  }
}

@keyframes snow-drop {
  $window-height-threshold: 1.5;
  0% {
    transform: translate(0, 0);
    opacity: 0.5;
    margin-left: 0;
  }
  10% {
    margin-left: 15px;
  }
  20% {
    margin-left: 20px;
  }
  25% {
    transform: translate(0, 250px / $window-height-threshold);
    opacity: 0.75;
  }
  30% {
    margin-left: 15px;
  }
  40% {
    margin-left: 0;
  }
  50% {
    transform: translate(0, 500px / $window-height-threshold);
    opacity: 1;
    margin-left: -15px;
  }
  60% {
    margin-left: -20px;
  }
  70% {
    margin-left: -15px;
  }
  75% {
    transform: translate(0, 750px / $window-height-threshold);
    opacity: 0.5;
  }
  80% {
    margin-left: 0;
  }
  100% {
    transform: translate(0, 1000px / $window-height-threshold);
    opacity: 0;
  }
}

div#spring {
  position: absolute;
  width: 100vw;
  height: 100vh;
  bottom: -90px;
  transition: 1s;

  &.animated{
    bottom: 0;
  }

  img.grass {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 25px;
  }

  &.animated img.grass {
    animation: 5s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite plants;
  }

  ion-img {
    position: absolute;
  }

  $flowers: 24;

  @for $i from 1 through $flowers {
    &.animated :nth-child(#{$i}) {
      animation: (random(4000) + 3000) * 1ms linear infinite plants;
    }
    :nth-child(#{$i}) {
      left: ((90 / $flowers) * $i) + random(10) - 5 * 1%;
      height: random(30) + 40px;
      bottom: random(10) - 10px;
      z-index: random(2) - 1;
    }
  }
}

@keyframes plants {
  30% {
    transform: skewX(10deg) translateX(-5px);
  }
  70% {
    transform: skewX(-10deg) translateX(5px);
  }
}
